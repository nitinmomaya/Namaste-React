Q1. What is NPM?
->npm uses to manage packages for our app
  react app powered by different package and those package comes under npm

Q2. What is 'Parcel/Webpack'? why do we need it?

-> Parcel/Webpack are bundlers which super-powers the react application
    Parcel and webpack are the bundlers used mostly for JavaScript or Typescript code that helps you to minify, 
    clean, and make your code compact so that it becomes easier to send a request or receive the response from the server
    when it usually takes you to transfer multiple files without using any bundler for loading the page of your application.
    Both of these bundlers substantially reduce the time it takes for the transfer of data and files to the server from the application. 
    Along with that both bundlers parcel and webpack remove the unnecessary comments, new lines, any kind of block delimiters, 
    and white spaces while the functionality of the code remains unchanged.

   BUNDLERS BENEFITS:-
    
    * HMR-Hot Module Replacement- helps to update any changes in file
    * File Watcher algorithm- written in C++- save file-inclduing node_module c
    * BUNDLING
    * MINIFY
    * cleaning our code
    * Optimization
    * Dev and Production Build
    * SuperFast Build Algorithm
    * Caching while development:- this helps to reduce build time with every buld it create cache
    * Compression
    * comptable with older browser
    * https on devs --https
    * Consistent Hashing Algorithm
    * Transitive Dependecies- Dependency Tree
    * PORT Number

Q3. What is Parcel-cache??

-> it get creates automatically when we build apps to improve the build production time


Q4. What is npx?

-> Node package Execute:-It is an npm package runner that can execute any package that you want 
   from the npm registry without even installing that package.

Q5. Difference between Dependecies and devDependecies?

-> devDependencies are those packages in the package. json file that you need only for project development purposes.
   dependencies Packages required by your application in production.

Q6. What is Tree Shaking?

-> Tree shaking is a process that bundlers like webpack and rollup go through to remove unused code. 
   Tree shaking means that only components from our library used in the app are included in the app bundle. 
   If not tree shaken, all the components will be included even if they are not used


Q7. What is Hot Module Replacement?

-> Hot Module Replacement (or HMR) is one of the most useful features offered by bundlers. 
   It allows all kinds of modules to be updated at runtime without the need for a full refresh. 

Q8. List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words?

-> * HMR-Hot Module Replacement- helps to update any changes in file
 * File Watcher algorithm- written in C++- save file-inclduing node_module c
 * BUNDLING
 * MINIFY
 * cleaning our code
 * Optimization
 * Dev and Production Build
 * SuperFast Build Algorithm
 * Caching while development:- this helps to reduce build time with every build it create cache file

 Q9. What is `.gitignore`? What should we add and not add into it?

 -> A gitignore file specifies intentionally untracked files that Git should ignore. Files already tracked by Git are not affected

    include: Each file while are not available in server never forget to include package.json and package-lock.json file
    ignore: files like node_module,.parcel-cache

Q10. What is the difference between `package.json` and `package-lock.json`?

->  package.json:-It contains basic information about the project.
                 -It is mandatory for every project.
                 -It contains information such as name, description, author, script, and dependencies.

    package.lock.json:-It describes the exact tree that was generated to allow subsequent installs to have the identical tree.
                      -It is automatically generated for those operations where npm modifies either node_modules tree or package.json.
                      -t contains the name, dependencies, and locked version of the project.

Q11. Why should I not modify `package-lock.json`?  

-> package-lock. json to keep track of exact dependency trees at any given time. 
   It will ensure that all clients that download your project and attempt to install dependencies will get the exact same dependency tree

   modifing any dependencies may break the application in production

Q12. What is `node_modules` ? Is it a good idea to push that on git?

-> The node_modules folder is used to save all downloaded packages from npm in your computer for the JavaScript project that you have. 
   Developers are always recommended to do a fresh install with npm install each time they downloaded a JavaScript project into their computer.
   
   No, it's a very heavy file and can be download so we not add it git

Q13. What is in a dist folder?

-> The /dist folder contains the minimized version of the source code. The code present in the /dist folder 
   is actually the code which is used on production web applications.Along with the minified code, 
   the /dist folder also comprises of all the compiled modules that may or may not be used with other systems

Q14. What is `browserlists`?

-> The config to share target browsers and Node. js versions between different front-end tools